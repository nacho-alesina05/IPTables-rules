 # ================ Table 'filter', automatic rules
    # accept established sessions
    $IPTABLES -A INPUT   -m state --state ESTABLISHED,RELATED -j ACCEPT 
    $IPTABLES -A OUTPUT  -m state --state ESTABLISHED,RELATED -j ACCEPT 
    $IPTABLES -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

#Se hace stateful. Aceptando paquetes de conexiones establecidas o relacionados.
    # ================ Table 'nat',  rule set NAT
    # 
    # Rule 0 (NAT)
    # 
    echo "Rule 0 (NAT)"
    # 
    $IPTABLES -t nat -A POSTROUTING -o eth0 (Externa)   -s 172.16.42.0/24  -j SNAT --to-source 172.16.44.1
    $IPTABLES -t nat -A POSTROUTING -o eth0 (Externa)   -s 172.16.43.0/24  -j SNAT --to-source 172.16.44.1

#Las anteriores son reglas sobre nat. Dice que los paquetes que salgan por la interfaz eth0 que vengan de las subredes 172.16.42.0/24 y 172.16.43.0/24 se cambia a la dirección IP 172.16.44.1

    # ================ Table 'filter', rule set Policy
    # 
    # Rule 0 (global)
    # 
    echo "Rule 0 (global)"
    # 
    $IPTABLES -N Cid3577X48915.0
    $IPTABLES -A FORWARD -i +  -p tcp -m tcp  -m multiport  -d 172.16.42.2   --dports 80,443,25  -m state --state NEW  -j Cid3577X48915.0
    $IPTABLES -A Cid3577X48915.0  -s 172.16.42.0/24   -j ACCEPT
    $IPTABLES -A Cid3577X48915.0  -s 172.16.43.0/24   -j ACCEPT
    $IPTABLES -A Cid3577X48915.0  -s 172.16.44.0/24   -j ACCEPT
    
    # 1)crea una cadena de procesamiento 2)si los paquetes cumplen que se dirigen a IP 172.16.42.2 y que tienen como destino los puertos 80, 443 y 25, entonces se envia a la cadena "Cid3577X48915.0" para más procesamiento.
    # 3,4,5) Son reglas que se aplican a la cadena que permite que los paquetes de la subred sean aceptados y pasen.
    
    # 
    # Rule 1 (eth1(interna))
    # 
    echo "Rule 1 (eth1(interna))"
    # 
    $IPTABLES -A FORWARD -i eth1(interna)  -p tcp -m tcp  -s 172.16.43.0/24   -d 172.16.42.2   --dport 53  -m state --state NEW  -j ACCEPT
    $IPTABLES -A FORWARD -i eth1(interna)  -p udp -m udp  -s 172.16.43.0/24   -d 172.16.42.2   --dport 53  -m state --state NEW  -j ACCEPT
    # 

    #Las reglas permiten el trafico tcp y udp desde la red interna hacia la ip 172.16.42.2

    # Rule 2 (eth2(DMZ))
    # 
    echo "Rule 2 (eth2(DMZ))"
    # 
    $IPTABLES -A INPUT -i eth2(DMZ)  -p tcp -m tcp  -s 172.16.42.2   -d 172.16.44.0/24   --dport 53  -m state --state NEW  -j ACCEPT
    $IPTABLES -A INPUT -i eth2(DMZ)  -p udp -m udp  -s 172.16.42.2   -d 172.16.44.0/24   --dport 53  -m state --state NEW  -j ACCEPT
    $IPTABLES -A FORWARD -i eth2(DMZ)  -p tcp -m tcp  -s 172.16.42.2   -d 172.16.44.0/24   --dport 53  -m state --state NEW  -j ACCEPT
    $IPTABLES -A FORWARD -i eth2(DMZ)  -p udp -m udp  -s 172.16.42.2   -d 172.16.44.0/24   --dport 53  -m state --state NEW  -j ACCEPT
    # 

#Permite el trafico dns desde la dmz hacia la red insegura.

    # Rule 3 (eth1(interna))
    # 
    echo "Rule 3 (eth1(interna))"
    # 
    $IPTABLES -N Cid4349X48915.0
    $IPTABLES -A INPUT -i eth1(interna)  -p tcp -m tcp  --dport 22  -m state --state NEW  -j Cid4349X48915.0
    $IPTABLES -A Cid4349X48915.0  -s 172.16.43.3   -j ACCEPT
    $IPTABLES -A Cid4349X48915.0  -s 172.16.43.4   -j ACCEPT
    $IPTABLES -A Cid4349X48915.0  -s 172.16.43.5   -j ACCEPT
    # 

#Permite el acceso ssh desde las maquinas de gestion al firewall, nuevamente usando el mecanismo de crear una cadena personalizada para realizar mas procesamiento a los paquetes que cumplan ciertos requisitos.
#La cadena finalmente permite el acceso de las ips de las maquinas de gestion, para llegar a dicho procesamiento previamente deben cumplir que son paquetes  TCP que ingresan a través de la interfaz de red eth1 y que tienen como destino el puerto 22 (SSH)

    # Rule 4 (eth1(interna))
    # 
    echo "Rule 4 (eth1(interna))"
    # 
    $IPTABLES -N In_RULE_4
    $IPTABLES -A INPUT -i eth1(interna)  -p tcp -m tcp  -m multiport  -s 172.16.43.0/24   --dports 80,443,22  -j In_RULE_4
    $IPTABLES -A In_RULE_4  -j LOG  --log-level info --log-prefix "RULE 4 -- DENY "
    $IPTABLES -A In_RULE_4  -j DROP
    # 

#Estas reglas, nuevamente con el mecanismo de la cadena personalizada deniegan el acceso al firewall de cualquier ip proveniente de la red interna, tanto al puerto 22, 80 y 443. No habra problemas con las maquinas de gestion pues en caso de que sea una maquina,
# de gestion su trafico sera aceptado por la rule anterior. Y una vez que se encuentra una regla que acepta o deniega el paquete se toma en consideracion dicha regla. Por eso es que es muy importante el orden en que se determinan las reglas en iptables.

    # Rule 5 (eth1(interna))
    # 
    echo "Rule 5 (eth1(interna))"
    # 
    $IPTABLES -A INPUT -i eth1(interna)  -p tcp -m tcp  -m multiport  -s 172.16.43.0/24   --dports 80,443,22  -m state --state NEW  -j ACCEPT
    $IPTABLES -A FORWARD -i eth1(interna)  -p tcp -m tcp  -m multiport  -s 172.16.43.0/24   --dports 80,443,22  -m state --state NEW  -j ACCEPT
    # 

#Permite el trafico desde la red interna hacia los puertos 22, 80 y 443 de cualquier red. Como bloqueamos en el paso anterior el acceso al firewall, nos garantizamos que los paquetes que vayan al firewall, por mas que esta regla los permita, seran rechazados.

    # Rule 6 (global)
    # 
    echo "Rule 6 (global)"
    # 
    $IPTABLES -N RULE_6
    $IPTABLES -A OUTPUT  -j RULE_6
    $IPTABLES -A INPUT  -j RULE_6
    $IPTABLES -A FORWARD  -j RULE_6
    $IPTABLES -A RULE_6  -j LOG  --log-level info --log-prefix "RULE 6 -- DENY "
    $IPTABLES -A RULE_6  -j DROP

#cualquier comando que llegue a la rule6 sera rechazado. Es la forma de rechazar cualquier otro tipo de trafico que no sea el permitido previamente.
}
